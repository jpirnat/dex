{% extends "html/base.twig" %}

{% block body %}
{% verbatim %}
<div id="app" v-cloak>
	<dex-breadcrumbs :breadcrumbs="breadcrumbs"></dex-breadcrumbs>

	<div class="version-group-control" v-if="versionGroups.length">
		<ul>
			<li v-for="vg in versionGroups">
				<a :href="ivCalculatorUrl(vg)"
					:class="{
						'current': vg.identifier === versionGroup.identifier
					}"
				>{{ vg.name }}</a>
			</li>
		</ul>
	</div>

	<div v-if="!loaded" class="dex-loader-container">
		<div class="dex-loader"></div>
	</div>

	<template v-if="loaded">
		<h1 class="dex-page__title">IV Calculator</h1>

		<div>
			<div>
				<div v-if="selectedPokemon !== null">Selected Pokémon: {{ selectedPokemon.name }}</div>
				<label>
					<span>Pokémon:</span>
					<input type="text" v-model.trim="pokemonName" list="pokemon-names"
						@input="onChangePokemonName"
					>
					<datalist id="pokemon-names">
						<option v-for="p in pokemons" :key="p.identifier" :value="p.name"></option>
					</datalist>
				</label>
			</div>

			<div>
				<div v-if="selectedNature !== null">Selected Nature: {{ selectedNature.expandedName }}</div>
				<label>
					<span class="iv-calculator__label">Nature:</span>
					<input type="text" v-model.trim="natureName" list="nature-names"
						@input="onChangeNatureName"
					>
					<datalist id="nature-names">
						<option v-for="n in natures" :key="n.identifier" :value="n.expandedName"></option>
					</datalist>
				</label>
			</div>

			<div v-if="characteristics.length > 0">
				<div v-if="selectedCharacteristic !== null">Selected Characteristic: {{ selectedCharacteristic.name }}</div>
				<label>
					<span class="iv-calculator__label">Characteristic:</span>
					<input type="text" v-model.trim="characteristicName" list="characteristic-names"
						@input="onChangeCharacteristicName"
					>
					<datalist id="characteristic-names">
						<option v-for="c in characteristics" :key="c.identifier" :value="c.name"></option>
					</datalist>
				</label>
			</div>

			<div v-if="types.length > 0">
				<div v-if="selectedHpType !== null">Selected Hidden Power Type: {{ selectedHpType.name }}</div>
				<label>
					<span class="iv-calculator__label">Hidden Power Type:</span>
					<input type="text" v-model.trim="hpTypeName" list="type-names"
						@input="onChangeHpTypeName"
					>
					<datalist id="type-names">
						<option v-for="t in types" :key="t.identifier" :value="t.name"></option>
					</datalist>
				</label>
			</div>
		</div>

		<div class="iv-calculator__container" v-for="(l, atLevelIndex) in atLevel">
			<div class="iv-calculator__column iv-calculator__column--gap">
				<label>
					<span class="iv-calculator__label">Level:</span>
					<input type="number" class="iv-calculator__input--level"
						v-model.number="l.level"
						min="1" max="100" step="1"
					>
				</label>

				<button v-if="atLevel.length > 1" @click="removeLevel(atLevelIndex)">Remove Level</button>

				<button v-if="atLevelIndex === atLevel.length - 1" @click="addLevel">Add Level</button>
			</div>

			<div class="iv-calculator__column">
				<div class="iv-calculator__column-title">Stats:</div>
				<label v-for="s in stats" :key="s.identifier"
					:class="{
						'iv-calculator__stat-block': true,
						['dex-table__stat--' + s.identifier]: true,
					}"
				>
					<span class="iv-calculator__label">{{ s.name }}:</span>
					<input type="number" class="iv-calculator__input--final"
						v-model.number="l.finalStats[s.identifier]"
						min="1" max="714" step="1"
					>
				</label>
			</div>

			<div class="iv-calculator__column">
				<div class="iv-calculator__column-title">EVs:</div>
				<label v-for="s in stats" :key="s.identifier"
					:class="{
						'iv-calculator__stat-block': true,
						['dex-table__stat--' + s.identifier]: true,
					}"
				>
					<span class="iv-calculator__label">{{ s.name }}:</span>
					<input type="number" class="iv-calculator__input--ev"
						v-model.number="l.evs[s.identifier]"
						min="0" max="252" step="1"
					>
				</label>
			</div>
		</div>

		<div class="iv-calculator__container">
			<div class="iv-calculator__column">
				<button :disabled="disableCalculate" @click="calculate">Calculate</button>
			</div>
		</div>

		<div class="iv-calculator__container">
			<div class="iv-calculator__column">
				<div class="iv-calculator__column-title">IVs:</div>
				<label v-for="s in stats" :key="s.identifier"
					:class="{
						'iv-calculator__stat-block': true,
						['dex-table__stat--' + s.identifier]: true,
					}"
				>
					<span class="iv-calculator__label">{{ s.name }}:</span>
					<input type="text" class="iv-calculator__input--iv" readonly
						v-model="ivs[s.identifier]"
					>
				</label>
			</div>
		</div>
	</template>
</div>
{% endverbatim %}
{% endblock %}

{% block scripts %}
	<script src="https://cdn.jsdelivr.net/npm/vue@2.7"></script>
	<script src="/js/dex-breadcrumbs.js"></script>

	<script src="/js/dex/tools/iv-calculator.js"></script>
{% endblock %}
